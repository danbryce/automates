vars: org/clulab/aske_automates/grammars/vars.yml

rules:

  - name: subtraction_difference_between
    label: Function
    priority: ${priority}
    type: dependency
    # action: ${action}
    example: "Rnl, net long-wave radiation, is the difference between upward long-wave radiation from the standardized surface (Rlu) and downward long-wave radiation from the sky (Rld),"
    pattern: | #todo: how to distinguish between nmod_between (shorter distance) vs nmod_between (longer distance)? conj_and?
      trigger = [word = "difference"]
      input1:Concept = nmod_between
      input2:Concept = nmod_between conj_and
      output:Variable = nsubj


  - name: multiplication_product_of
    label: Function
    priority: ${priority}
    type: dependency
    # action: ${action}
    example: "Similar to equation 2, E0 is calculated as the product of Kcd and ETpm."
    pattern: | #todo: how to distinguish between nmod_of (shorter distance) vs nmod_of (longer distance)?
      trigger = [word = "product"] (?="of")
      input1:Variable = nmod_of
      input2:Variable = nmod_of conj_and
      output:Variable = <nmod_as nsubjpass

  #covidactnow

  - name: division_divide_by
    label: Function
    priority: ${priority}
    type: dependency
    # action: ${action}
    example: "Initial conditions for total cases and total exposed are calculated by dividing hospitalizations by the hospitalization rate."
    pattern: |
      trigger = [lemma = "divide"]
      input1:Concept = dobj
      input2:Concept = nmod_by
      output:Concept = <advcl_by nsubjpass

  - name: inverse_of
    label: Function
    priority: ${priority}
    type: dependency
    # action: ${action}
    example: "Î³ is the inverse of the mean recovery time, in days."
    pattern: |
      trigger = [lemma = "inverse"] (?="of")
      input:Concept = nmod_of
      output:Concept = nsubj

  #double_epidemic
  
  - name: rate_proportional
    label: Function
    priority: ${priority}
    type: dependency
    # action: ${action}
    example: "The gain in the exposed class E is at a rate proportional to the number of people in the infective class I and that of the susceptibles S, that is rS(t)I(t), where r > 0 is a constant."
    pattern: |
      trigger = [lemma = "proportional"]
      input1:Concept = nmod_to 
      input2:Concept = <amod? conj_and
      output:Concept = <amod? nsubj


